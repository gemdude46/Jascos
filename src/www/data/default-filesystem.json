{"$programs": {"$hello": "function main() {\npostMessage({\naction: 3,\nfd: 1,\ndata: 'Hello, world!\\n'\n});\npostMessage({\naction: 1\n});\n}\n", "$echo": "function main(args) {\npostMessage({\naction: 3,\nfd: 1,\ndata: args.slice(1).join(' ') + '\\n'\n});\npostMessage({\naction: 1\n});\n}\n", "$date": "function main() {\npostMessage({\naction: 3,\nfd: 1,\ndata: (new Date()).toString() + '\\n'\n});\npostMessage({\naction: 1\n});\n}\n", "$shell": "function print(str) {\n\tpostMessage({\n\t\taction: 3,\n\t\tfd: 1,\n\t\tdata: str\n\t});\n}\n\nvar running;\n\nvar infwfd;\nvar spid;\n\nvar spout, sperr;\n\nvar line = '';\n\nfunction runcmd() {\n\tlet args = line.replace(/ +/g, ' ').split(' ');\n\tif (-1 === args[0].indexOf('/')) {\n\t\targs[0] = '/programs/' + args[0];\n\t}\n\n\tonresponse(1, rsp => {\n\t\tinfwfd = rsp.stdin;\n\t\tspid = rsp.pid;\n\t\tspout = rsp.stdout;\n\t\tsperr = rsp.stderr;\n\t\trunning = true;\n\n\t\tpostMessage({\n\t\t\taction: 4,\n\t\t\tfd: rsp.stdout,\n\t\t\tsig: 102\n\t\t});\n\t\tpostMessage({\n\t\t\taction: 4,\n\t\t\tfd: rsp.stderr,\n\t\t\tsig: 102\n\t\t});\n\t});\n\n\tpostMessage({\n\t\taction: 8,\n\t\targs: args,\n\t\tresponse_code: 1\n\t});\n}\n\nfunction main() {\n\thandleinterrupt(102, msg => {\n\t\tprint(msg.data);\n\t});\n\t\n\tprompt();\n\n\thandleinterrupt(101, msg => {\n\t\tif (running) {\n\t\t\tpostMessage({\n\t\t\t\taction: 3,\n\t\t\t\tfd: infwfd,\n\t\t\t\tdata: msg.data\n\t\t\t});\n\t\t} else {\n\t\t\tfor (let c of msg.data) {\n\t\t\t\tif (c === '\\b') {\n\t\t\t\t\tif (line) {\n\t\t\t\t\t\tline = line.substring(0, line.length - 1);\n\t\t\t\t\t\tprint(c);\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '\\n') {\n\t\t\t\t\tprint(c)\n\t\t\t\t\tif (line) {\n\t\t\t\t\t\truncmd();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprompt();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint(c);\n\t\t\t\t\tline += c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tpostMessage({\n\t\taction: 4,\n\t\tfd: 0,\n\t\tsig: 101\n\t});\n\n\tfunction repromptifdead(msg) {\n\t\tonresponse(7, repromptifdead);\n\t\tif (msg.state === 3 && running) {\n\t\t\tpostMessage({\n\t\t\t\taction: 5,\n\t\t\t\tfd: infwfd\n\t\t\t});\n\t\t\tpostMessage({\n\t\t\t\taction: 5,\n\t\t\t\tfd: spout\n\t\t\t});\n\t\t\tpostMessage({\n\t\t\t\taction: 5,\n\t\t\t\tfd: sperr\n\t\t\t});\n\t\t\tprompt();\n\t\t} else if (msg.state === -1) {\n\t\t\tthrow Error('-1')\n\t\t}\n\t}\n\tonresponse(7, repromptifdead);\n\n\tsetInterval( () => {\n\t\tif (running) {\n\t\t\tpostMessage({\n\t\t\t\taction: 9,\n\t\t\t\tpid: spid,\n\t\t\t\tresponse_code: 7\n\t\t\t});\n\t\t}\n\t}, 1024);\n}\n\nfunction prompt() {\n\tprint('$ ');\n\trunning = false;\n\tline = '';\n}\n"}, "$boot": {"$init": "var screen = Array(24).fill(null).map( _ => Array(80).fill(' ') );\n\nvar cursor = {ln: 0, col: 0};\n\nfunction updateScreen() {\nlet data = screen.map( line => line.join('') ).join('');\npostMessage({\naction: 32,\nform: 'text-display',\ndata: data\n});\n}\n\nfunction scrollUp() {\nfor (let ln = 0; ln < 23; ln++) {\nfor (let col = 0; col < 80; col++) {\nscreen[ln][col] = screen[1+ln][col];\n}\n}\nscreen[23].fill(' ');\n}\n\nfunction writeChar(c) {\nif (c.length !== 1) throw TypeError('Expected char');\n\nif (c === '\\t') {\ndo {\nwriteChar(' ');\n} while (cursor.col & 7);\n} else if (c === '\\r') {\ncursor.col = 0;\n} else if (c === '\\n') {\ncursor.col = 0;\nif (24 === ++cursor.ln) {\ncursor.ln = 23;\nscrollUp();\n}\n} else if (c === '\\b') {\nif (-1 === --cursor.col) {\ncursor.col = 0;\n}\nscreen[cursor.ln][cursor.col] = ' ';\n} else {\nscreen[cursor.ln][cursor.col] = c;\nif (80 === ++cursor.col) {\ncursor.col = 0;\nif (24 === ++cursor.ln) {\ncursor.ln = 23;\nscrollUp();\n}\n}\n}\n}\n\nfunction writeString(s) {\nfor (let c of s) {\nwriteChar(c);\n}\n}\n\nfunction writeData(msg) {\nwriteString(msg.data);\nupdateScreen();\n}\n\nfunction print(s) {\nwriteString(s + '\\n');\n}\n\nfunction main(args, pid) {\nprint('Jascos DEV 0.0.1');\nprint('Starting OS...');\nprint('System Time:\\t' + Date.now() + '\\t' + new Date());\nprint('Init PID:\\t' + pid);\n\nupdateScreen();\n\nonresponse(42, msg => {\nhandleinterrupt(101, writeData);\nhandleinterrupt(102, writeData);\n\npostMessage({\naction: 4,\nfd: msg.stdout,\nsig: 101\n});\n\npostMessage({\naction: 4,\nfd: msg.stderr,\nsig: 102\n});\n\nhandleinterrupt(1, evt => {\nlet key = (evt.key.length === 1 ? evt.key : {\n'Enter': '\\n',\n'Tab': '\\t',\n'Backspace': '\\b'\n}[evt.key]);\nif (key) {\npostMessage({\naction: 3,\nfd: msg.stdin,\ndata: key\n});\n}\n});\n});\n\npostMessage({\naction: 8,\nargs: [ '/programs/shell' ],\nresponse_code: 42\n});\n}\n\n"}}